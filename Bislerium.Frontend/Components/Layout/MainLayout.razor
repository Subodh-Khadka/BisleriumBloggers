@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

@using Blazored.LocalStorage
@inject ILocalStorageService localStorage


<link href="~/app.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <AuthorizeView>
                <NotAuthorized>
                    <a href="/login">Login</a>
                </NotAuthorized>
                <Authorized>
                     <button>Logout</button>
                </Authorized>
            </AuthorizeView>
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>
       
        <div class="top-row px-4">
            @if (!IsAuthenticated)
            {
                <a href="/login">Login</a>
            }
            else
            {
                <button>Logout</button>
            }
        </div>


        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    private bool IsAuthenticated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        IsAuthenticated = authState.User.Identity.IsAuthenticated;
    }
}